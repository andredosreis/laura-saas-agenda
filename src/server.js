import dotenv from 'dotenv-flow';
import cron from 'node-cron';
import connectDB from './config/db.js';
import app from './app.js';

// Importamos APENAS a fun√ß√£o que precisamos do controller.
// Isto √© uma boa pr√°tica que o ES Modules facilita.
import { enviarLembretes24h } from './controllers/agenteController.js';

// Carrega as vari√°veis de ambiente
dotenv.config();

// Conectar ao banco de dados e, ap√≥s sucesso, iniciar o servidor
connectDB().then(() => {
  const PORT = process.env.PORT || 5000;
  app.listen(PORT, () => {
    console.log(`üñ•Ô∏è  Servidor a rodar na porta ${PORT}`);
  });
}).catch(err => {
  console.error("‚ùå Falha ao conectar ao MongoDB. O servidor n√£o foi iniciado.", err);
  process.exit(1); // Encerra o processo se a conex√£o com o BD falhar
});

import { sendReminderNotifications } from './controllers/agenteController.js';

// ‚è∞ CRON JOB: Lembretes di√°rios √†s 19h (Europe/Lisbon)
cron.schedule('0 19 * * *', async () => {
  console.log('‚è∞ [CRON] Executando lembrete di√°rio de agendamentos...');
  try {
    const resultado = await sendReminderNotifications(
      { method: 'CRON' },
      {
        status: () => ({
          json: (data) => console.log('[CRON] Resultado:', data),
        }),
      }
    );
    console.log('‚úÖ [CRON] Tarefa de lembretes conclu√≠da');
  } catch (error) {
    console.error('‚ùå [CRON] Falha ao executar tarefa:', error);
  }
}, {
  timezone: 'Europe/Lisbon',
});

console.log('‚è∞ [CRON] Job registado: Lembretes di√°rios √†s 19h (Europe/Lisbon)');